<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
    This configuration file was written by the eclipse-cs plugin
    configuration editor
-->
<!--
    Checkstyle-Configuration: sakura-boot checkstyle
    Description: The checkstyle use in the sakura-boot project.
-->
<module name="Checker">

    <module name="SuppressionFilter">
        <property name="file"
                  value="./checkstyle/checkstyle-file-suppressions.xml"/>
        <property name="optional" value="true"/>
    </module>
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <property name="severity" value="error"/>
    <module name="Translation">
        <property name="severity" value="warning"/>
    </module>
    <property name="charset" value="UTF-8"/>
    <property name="fileExtensions" value="java, properties, xml"/>

    <property name="tabWidth" value="4"/>
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>
    <module name="NewlineAtEndOfFile"/>
    <module name="UniqueProperties"/>
    <module name="RegexpSingleline">
        <property name="severity" value="warning"/>
        <property name="format" value="\s+$"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>
    <module name="RegexpHeader">
        <property name="headerFile" value="headerFile.txt"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <module name="FileLength">
        <property name="severity" value="warning"/>
        <property name="max" value="4000"/>
    </module>
    <module name="LineLength">
        <property name="max" value="80"/>
    </module>

    <module name="JavadocPackage">
        <property name="severity" value="warning"/>
    </module>

    <module name="TreeWalker">
        <module name="SuppressionXpathFilter">
            <property name="file"
                      value="./checkstyle/checkstyle-suppressions.xml"/>
            <property name="optional" value="true"/>
        </module>

        <!--COMMON CHECK-->

        <!--NO BOOLEAN AS PARAMETER CHECK-->
        <module name="MatchXpath">
            <property name="query"
                      value="//CLASS_DEF[IDENT[
                      not(matches(@text, '.*(Test|IT|FT)$'))]]
                      //METHOD_DEF[MODIFIERS/LITERAL_PUBLIC
                      and PARAMETERS/PARAMETER_DEF/TYPE/LITERAL_BOOLEAN
                      and not(SLIST[count(EXPR)=1
                      and EXPR/ASSIGN/DOT/LITERAL_THIS]
                      and count(PARAMETERS/*)=1
                      and TYPE/LITERAL_VOID) and not(SLIST[count(EXPR)=1
                      and EXPR/ASSIGN/DOT/LITERAL_THIS
                      and LITERAL_RETURN/EXPR/LITERAL_THIS]
                      and count(PARAMETERS/*)=1)]/IDENT"/>
            <message key="matchxpath.match"
                     value="Having a boolean as a parameter is not allowed."/>
        </module>

        <!--COMMON SUPPRESSION-->

        <!--FLUENT SETTER: HIDDEN FIELD SUPPRESSION-->
        <module name="SuppressionXpathSingleFilter">
            <property name="checks" value="HiddenField"/>
            <property name="query"
                      value="//METHOD_DEF[SLIST[count(EXPR)=1
                      and EXPR/ASSIGN/DOT/LITERAL_THIS]
                      and count(PARAMETERS/*)=1
                      and TYPE/LITERAL_VOID]/PARAMETERS/PARAMETER_DEF/IDENT"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <property name="checks" value="HiddenField"/>
            <property name="query"
                      value="//METHOD_DEF[SLIST[count(EXPR)=1
                      and EXPR/ASSIGN/DOT/LITERAL_THIS
                      and LITERAL_RETURN/EXPR/LITERAL_THIS]
                      and count(PARAMETERS/*)=1]
                      /PARAMETERS/PARAMETER_DEF/IDENT"/>
        </module>

        <!--SPRING BOOT SUPPRESSION-->

        <!--MAIN CLASS: HIDE UTILITY CLASS CONSTRUCTOR SUPPRESSION-->
        <module name="SuppressionXpathSingleFilter">
            <property name="checks" value="HideUtilityClassConstructor"/>
            <property name="query"
                      value="//CLASS_DEF[//ANNOTATION/IDENT
                      [@text='SpringBootApplication']]"/>
        </module>

        <!--LOMBOK SUPPRESSION-->

        <!--UTILITY CLASS AS FIELD STATIC BY DEFAULT:
        ABBREVIATION AS WORD IN NAME and MEMBER NAME SUPPRESSION-->
        <module name="SuppressionXpathSingleFilter">
            <property name="checks"
                      value="AbbreviationAsWordInName|MemberName"/>
            <property name="query"
                      value="//CLASS_DEF[//ANNOTATION/IDENT
                      [@text='UtilityClass']]/OBJBLOCK
                      /VARIABLE_DEF[MODIFIERS/FINAL]/IDENT"/>
        </module>
        <module name="MatchXpath">
            <property name="query"
                      value="//CLASS_DEF[//ANNOTATION/IDENT
                      [@text='UtilityClass']]/OBJBLOCK
                      /VARIABLE_DEF[MODIFIERS/FINAL]/IDENT
                      [not(matches(@text, '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'))]"/>
            <message key="matchxpath.match"
                     value="Constant name must match pattern
                     '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'"/>
        </module>

        <!--TEST SUPPRESSION-->

        <!--TEST METHOD CAN THROW: ILLEGAL THROWS SUPPRESSION-->
        <module name="SuppressionXpathSingleFilter">
            <property name="checks" value="IllegalThrows"/>
            <property name="query"
                      value="//(CLASS_DEF | INTERFACE_DEF)
                      [IDENT[matches(@text, '.*(Test|IT|FT)$')]]
                      //LITERAL_THROWS/IDENT"/>
        </module>

        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation"
                      value="false"/>
        </module>
        <module name="AnnotationUseStyle">
            <property name="severity" value="warning"/>
        </module>
        <module name="MissingDeprecated">
            <property name="severity" value="warning"/>
        </module>
        <module name="MissingOverride"/>

        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock"/>
        <module name="LeftCurly">
            <property name="tokens"
                      value="ANNOTATION_DEF,CLASS_DEF,CTOR_DEF,
                      ENUM_CONSTANT_DEF,ENUM_DEF,INTERFACE_DEF,LAMBDA,
                      LITERAL_CASE,LITERAL_CATCH,LITERAL_DEFAULT,LITERAL_DO,
                      LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,
                      LITERAL_IF,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,
                      LITERAL_TRY,LITERAL_WHILE,METHOD_DEF,OBJBLOCK,
                      STATIC_INIT,RECORD_DEF"/>
        </module>
        <module name="NeedBraces"/>
        <module name="RightCurly">
            <property name="tokens"
                      value="LITERAL_TRY,LITERAL_CATCH,LITERAL_FINALLY,
                      LITERAL_IF,LITERAL_ELSE,LITERAL_DO"/>
        </module>

        <module name="DesignForExtension">
            <property name="severity" value="warning"/>
            <property name="ignoredAnnotations" value="Override"/>
        </module>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InnerTypeLast">
            <property name="severity" value="warning"/>
        </module>
        <module name="InterfaceIsType"/>
        <module name="MutableException">
            <property name="severity" value="warning"/>
        </module>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount"/>
        <module name="VisibilityModifier">
            <property name="protectedAllowed" value="true"/>
            <property name="allowPublicFinalFields" value="true"/>
            <property name="allowPublicImmutableFields" value="true"/>
        </module>

        <module name="AvoidStarImport"/>
        <module name="AvoidStaticImport">
            <property name="severity" value="warning"/>
            <property name="excludes"
                      value="org.assertj.core.api.Assertions.*,
                      org.junit.Assert.*, org.junit.jupiter.api.Assertions.*,
                      org.junit.Assume.*,
                      org.junit.internal.matchers.ThrowableMessageMatcher.*,
                      org.hamcrest.CoreMatchers.*,
                      org.hamcrest.Matchers.*,
                      org.springframework.boot.configurationprocessor.
                      ConfigurationMetadataMatchers.*,
                      org.springframework.boot.configurationprocessor.
                      TestCompiler.*,
                      org.springframework.boot.test.autoconfigure.
                      AutoConfigurationImportedCondition.*,
                      org.mockito.Mockito.*, org.mockito.BDDMockito.*,
                      org.mockito.Matchers.*,
                      org.mockito.ArgumentMatchers.*,
                      org.springframework.restdocs.mockmvc.
                      MockMvcRestDocumentation.*,
                      org.springframework.restdocs.hypermedia.
                      HypermediaDocumentation.*,
                      org.springframework.test.web.servlet.request.
                      MockMvcRequestBuilders.*,
                      org.springframework.test.web.servlet.result.
                      MockMvcResultMatchers.*,
                      org.springframework.security.test.web.servlet.request.
                      SecurityMockMvcRequestBuilders.*,
                      org.springframework.security.test.web.servlet.request.
                      SecurityMockMvcRequestPostProcessors.*,
                      org.springframework.security.test.web.servlet.setup.
                      SecurityMockMvcConfigurers.*,
                      org.springframework.test.web.client.match.
                      MockRestRequestMatchers.*,
                      org.springframework.test.web.client.response.
                      MockRestResponseCreators.*,
                      org.springframework.web.reactive.function.server.
                      RequestPredicates.*,
                      org.springframework.web.reactive.function.server.
                      RouterFunctions.*,
                      org.springframework.test.web.servlet.setup.
                      MockMvcBuilders.*"/>
        </module>
        <module name="CustomImportOrder">
            <property name="customImportOrderRules"
                      value="STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###
                      THIRD_PARTY_PACKAGE###SAME_PACKAGE(3)###STATIC"/>
            <property name="standardPackageRegExp" value="^java\."/>
            <property name="specialImportsRegExp" value="^(javax|jakarta)\."/>
            <property name="sortImportsInGroupAlphabetically" value="true"/>
        </module>
        <module name="IllegalImport">
            <property name="severity" value="warning"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <module name="CommentsIndentation">
            <property name="severity" value="warning"/>
        </module>
        <module name="Indentation">
            <property name="severity" value="warning"/>
            <property name="braceAdjustment" value="4"/>
        </module>

        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="severity" value="warning"/>
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>
        <module name="FinalParameters">
            <property name="severity" value="warning"/>
            <property name="tokens"
                      value="METHOD_DEF, CTOR_DEF, LITERAL_CATCH,
                      FOR_EACH_CLAUSE"/>
        </module>
        <module name="NoCodeInFile">
            <property name="severity" value="warning"/>
        </module>
        <module name="OuterTypeFilename"/>
        <module name="TodoComment">
            <property name="severity" value="warning"/>
        </module>
        <module name="TrailingComment">
            <property name="severity" value="warning"/>
        </module>
        <module name="UncommentedMain">
            <property name="severity" value="warning"/>
            <property name="excludedClasses" value="SakuraBootApplication"/>
        </module>
        <module name="UpperEll"/>
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <module name="AnonInnerLength">
            <property name="severity" value="warning"/>
            <property name="max" value="40"/>
        </module>
        <module name="LambdaBodyLength">
            <property name="severity" value="warning"/>
            <property name="max" value="20"/>
        </module>
        <module name="MethodCount">
            <property name="severity" value="warning"/>
            <property name="maxTotal" value="200"/>
            <property name="maxPrivate" value="200"/>
            <property name="maxPackage" value="200"/>
            <property name="maxProtected" value="200"/>
            <property name="maxPublic" value="200"/>
        </module>
        <module name="MethodLength">
            <property name="severity" value="warning"/>
            <property name="max" value="300"/>
            <property name="countEmpty" value="false"/>
        </module>
        <module name="ParameterNumber">
            <property name="severity" value="warning"/>
        </module>

        <module name="EmptyForInitializerPad">
            <property name="severity" value="warning"/>
        </module>
        <module name="EmptyForIteratorPad">
            <property name="severity" value="warning"/>
        </module>
        <module name="EmptyLineSeparator">
            <property name="severity" value="warning"/>
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers"
                      value="false"/>
            <property name="tokens"
                      value="PACKAGE_DEF,IMPORT,STATIC_IMPORT,CLASS_DEF,
                      INTERFACE_DEF,ENUM_DEF,STATIC_INIT,
                      INSTANCE_INIT,METHOD_DEF,CTOR_DEF,VARIABLE_DEF,
                      RECORD_DEF,COMPACT_CTOR_DEF"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap">
            <property name="tokens" value="IMPORT,STATIC_IMPORT,PACKAGE_DEF"/>
        </module>
        <module name="NoWhitespaceAfter">
            <property name="severity" value="warning"/>
            <property name="tokens"
                      value="ARRAY_INIT,AT,INC,DEC,UNARY_MINUS,UNARY_PLUS,BNOT,
                      LNOT,DOT,ARRAY_DECLARATOR,INDEX_OP,
                      METHOD_REF"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="tokens"
                      value="COMMA,SEMI,POST_INC,POST_DEC,ELLIPSIS,
                      LABELED_STAT,METHOD_REF"/>
        </module>
        <module name="NoWhitespaceBeforeCaseDefaultColon">
            <property name="severity" value="warning"/>
        </module>
        <module name="OperatorWrap">
            <property name="tokens"
                      value="QUESTION,COLON,EQUAL,NOT_EQUAL,DIV,PLUS,MINUS,
                      STAR,MOD,SR,BSR,GE,GT,SL,LE,LT,BXOR,BOR,LOR,
                      BAND,LAND,LITERAL_INSTANCEOF,TYPE_EXTENSION_AND,
                      METHOD_REF"/>
        </module>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="severity" value="warning"/>
            <property name="tokens"
                      value="COMMA,ELLIPSIS,ARRAY_DECLARATOR,METHOD_REF"/>
        </module>
        <module name="SeparatorWrap">
            <property name="severity" value="warning"/>
            <property name="option" value="nl"/>
            <property name="tokens" value="DOT"/>
        </module>
        <module name="TypecastParenPad">
            <property name="severity" value="warning"/>
        </module>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <property name="allowEmptyLambdas" value="true"/>
        </module>

        <module name="AbbreviationAsWordInName">
            <property name="allowedAbbreviationLength" value="0"/>
            <property name="allowedAbbreviations" value="IT,FT,UUID"/>
            <property name="ignoreFinal" value="false"/>
        </module>
        <module name="AbstractClassName">
            <property name="severity" value="warning"/>
        </module>
        <module name="CatchParameterName"/>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z])$|([A-Z][0-9]*$)"/>
        </module>
        <module name="ConstantName"/>
        <module name="IllegalIdentifierName"/>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z])$|([A-Z][0-9]*$)"/>
        </module>
        <module name="LambdaParameterName">
            <property name="format" value="^[a-z]([a-zA-Z0-9]*)?$"/>
        </module>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z])$|([A-Z][0-9]*$)"/>
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="ParameterName"/>
        <module name="PatternVariableName"/>
        <module name="RecordComponentName"/>
        <module name="RecordTypeParameterName">
            <property name="format" value="(^[A-Z])$|([A-Z][0-9]*$)"/>
        </module>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <module name="AtclauseOrder">
            <property name="tagOrder"
                      value="@param, @author, @version, @return, @throws,
                      @exception, @see, @since, @serial,
                      @serialData, @serialField, @deprecated"/>
        </module>
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocBlockTagLocation"/>
        <module name="JavadocContentLocation"/>
        <module name="JavadocMethod">
            <property name="allowedAnnotations" value="Override, Test"/>
        </module>
        <module name="JavadocMissingLeadingAsterisk"/>
        <module name="JavadocMissingWhitespaceAfterAsterisk"/>
        <module name="JavadocParagraph"/>
        <module name="JavadocStyle">
            <property name="severity" value="warning"/>
        </module>
        <module name="JavadocTagContinuationIndentation"/>
        <module name="JavadocType">
            <property name="severity" value="warning"/>
        </module>
        <module name="JavadocVariable">
            <property name="severity" value="warning"/>
        </module>
        <module name="MissingJavadocMethod">
            <property name="allowedAnnotations" value="Override, Test"/>
        </module>
        <module name="MissingJavadocPackage">
            <property name="severity" value="warning"/>
        </module>
        <module name="MissingJavadocType">
            <property name="scope" value="protected"/>
        </module>
        <module name="NonEmptyAtclauseDescription">
            <property name="severity" value="warning"/>
        </module>
        <module name="RequireEmptyLineBeforeBlockTagGroup">
            <property name="severity" value="warning"/>
        </module>
        <module name="SingleLineJavadoc">
            <property name="severity" value="warning"/>
        </module>
        <module name="SummaryJavadoc">
            <property name="severity" value="warning"/>
            <property name="forbiddenSummaryFragments"
                      value="^@return the *|^This method returns
                      |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>
        </module>

        <module name="AvoidDoubleBraceInitialization"/>
        <module name="AvoidInlineConditionals">
            <property name="severity" value="warning"/>
        </module>
        <module name="AvoidNoArgumentSuperConstructorCall">
            <property name="severity" value="warning"/>
        </module>
        <module name="CovariantEquals"/>
        <module name="DeclarationOrder">
            <property name="severity" value="warning"/>
        </module>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization">
            <property name="severity" value="warning"/>
        </module>
        <module name="FallThrough">
            <property name="severity" value="warning"/>
        </module>
        <module name="FinalLocalVariable">
            <property name="severity" value="warning"/>
            <property name="tokens" value="VARIABLE_DEF,PARAMETER_DEF"/>
        </module>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <property name="setterCanReturnItsClass" value="true"/>
            <property name="ignoreAbstractMethods" value="true"/>
        </module>
        <module name="IllegalCatch"/>
        <module name="IllegalInstantiation">
            <property name="severity" value="warning"/>
        </module>
        <module name="IllegalThrows"/>
        <module name="IllegalToken"/>
        <module name="IllegalTokenText">
            <property name="severity" value="warning"/>
            <property name="format"
                      value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))
                      |\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message"
                      value="Consider using special escape sequence instead
                      of octal value or Unicode escaped value."/>
        </module>
        <module name="IllegalType">
            <property name="severity" value="warning"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable">
            <property name="severity" value="warning"/>
        </module>
        <module name="MultipleStringLiterals">
            <property name="severity" value="warning"/>
            <property name="ignoreStringsRegexp" value="^&quot;.{0,3}&quot;$"/>
        </module>
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="severity" value="warning"/>
            <property name="max" value="3"/>
        </module>
        <module name="NestedIfDepth">
            <property name="severity" value="warning"/>
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth">
            <property name="severity" value="warning"/>
            <property name="max" value="3"/>
        </module>
        <module name="NoClone">
            <property name="severity" value="warning"/>
        </module>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment">
            <property name="severity" value="warning"/>
        </module>
        <module name="ReturnCount">
            <property name="severity" value="warning"/>
            <property name="max" value="3"/>
            <property name="maxForVoid" value="3"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuperClone">
            <property name="severity" value="warning"/>
        </module>
        <module name="SuperFinalize">
            <property name="severity" value="warning"/>
        </module>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration">
            <property name="severity" value="warning"/>
        </module>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration">
            <property name="severity" value="warning"/>
        </module>
        <module name="UnnecessarySemicolonInEnumeration">
            <property name="severity" value="warning"/>
        </module>
        <module name="UnnecessarySemicolonInTryWithResources">
            <property name="severity" value="warning"/>
        </module>
        <module name="UnusedLocalVariable">
            <property name="severity" value="warning"/>
        </module>
        <module name="VariableDeclarationUsageDistance">
            <property name="severity" value="warning"/>
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format"
                      value="org\.mockito\.Mockito\.(when|doThrow|doAnswer)"/>
            <property name="message" value="Use BDDMockito instead."/>
            <property name="ignoreComments" value="true"/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="org\.junit\.Assert\.assert"/>
            <property name="message" value="Use AssertJ instead."/>
            <property name="ignoreComments" value="true"/>
        </module>
    </module>
</module>
